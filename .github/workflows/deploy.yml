name: CI/CD workflow for SpringGitExample

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: [ self-hosted, Windows, X64 ]
    defaults:
      run:
        shell: pwsh   # 윈도우 러너 기본 셸

    steps:
      # 1) 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) JDK 설정 + Maven 캐시
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      # 3) Maven 빌드 (Wrapper 사용)
      - name: Build project with Maven
        run: .\mvnw -B -DskipTests clean package

      # 4) 기존 컨테이너 중지/삭제
      - name: Stop and remove old container
        run: |
          $containerName = "${{ secrets.DOCKER_CONTAINER_NAME }}"
          $cid = docker ps -aq -f "name=$containerName"
          if ($cid) {
            Write-Host "Removing existing container $containerName"
            docker rm -f $cid
          } else {
            Write-Host "No existing container."
          }

      # 5) (선택) 이전 이미지 삭제
      - name: Remove old Docker image
        continue-on-error: true
        run: |
          $imageName = "${{ secrets.DOCKER_IMAGE_NAME }}"
          docker rmi -f $imageName

      # 6) 새 이미지 빌드
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .

      # 7) 컨테이너 실행 (8080 바인딩)
      - name: Run new Docker container
        run: docker run -d --name ${{ secrets.DOCKER_CONTAINER_NAME }} -p 8080:8080 ${{ secrets.DOCKER_IMAGE_NAME }}

      # 8) 컨테이너 상태 확인
      - name: Check running containers
        run: docker ps
